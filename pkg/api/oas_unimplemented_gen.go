// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// Health implements health operation.
//
// Health.
//
// GET /health
func (UnimplementedHandler) Health(ctx context.Context) (r HealthRes, _ error) {
	return r, ht.ErrNotImplemented
}

// IdpSignin implements idpSignin operation.
//
// Sign In.
//
// POST /idp/signin
func (UnimplementedHandler) IdpSignin(ctx context.Context, req OptIdPSigninRequestSchema) (r IdpSigninRes, _ error) {
	return r, ht.ErrNotImplemented
}

// IdpSignup implements idpSignup operation.
//
// Sign Up.
//
// POST /idp/signup
func (UnimplementedHandler) IdpSignup(ctx context.Context, req OptIdPSignupRequestSchema) (r IdpSignupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OpAuthorize implements opAuthorize operation.
//
// Authentication Request.
//
// GET /op/authorize
func (UnimplementedHandler) OpAuthorize(ctx context.Context, params OpAuthorizeParams) (r OpAuthorizeRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OpCallback implements opCallback operation.
//
// OP Callback.
//
// GET /op/callback
func (UnimplementedHandler) OpCallback(ctx context.Context, params OpCallbackParams) (r OpCallbackRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OpCerts implements opCerts operation.
//
// Https://openid-foundation-japan.github.io/rfc7517.ja.html.
//
// GET /op/certs
func (UnimplementedHandler) OpCerts(ctx context.Context) (r OpCertsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OpLogin implements opLogin operation.
//
// OP Login.
//
// POST /op/login
func (UnimplementedHandler) OpLogin(ctx context.Context, req *OPLoginRequestSchema) (r OpLoginRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OpLoginView implements opLoginView operation.
//
// OP Login.
//
// GET /op/login
func (UnimplementedHandler) OpLoginView(ctx context.Context, params OpLoginViewParams) (r OpLoginViewRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OpOpenIDConfiguration implements opOpenIDConfiguration operation.
//
// OpenID Provider Configuration.
//
// GET /op/.well-known/openid-configuration
func (UnimplementedHandler) OpOpenIDConfiguration(ctx context.Context) (r OpOpenIDConfigurationRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OpRevoke implements opRevoke operation.
//
// Https://openid.net/specs/openid-connect-core-1_0.html#Revocation.
//
// POST /op/revoke
func (UnimplementedHandler) OpRevoke(ctx context.Context, req *OPRevokeRequestSchema) (r OpRevokeRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OpToken implements opToken operation.
//
// Https://openid-foundation-japan.github.io/openid-connect-core-1_0.ja.html#TokenRequest.
//
// POST /op/token
func (UnimplementedHandler) OpToken(ctx context.Context, req *OPTokenRequestSchema) (r OpTokenRes, _ error) {
	return r, ht.ErrNotImplemented
}

// OpUserinfo implements opUserinfo operation.
//
// Https://openid.net/specs/openid-connect-core-1_0.html#UserInfo.
//
// GET /op/userinfo
func (UnimplementedHandler) OpUserinfo(ctx context.Context) (r OpUserinfoRes, _ error) {
	return r, ht.ErrNotImplemented
}

// RpCallback implements rpCallback operation.
//
// RP Callback.
//
// GET /rp/callback
func (UnimplementedHandler) RpCallback(ctx context.Context, params RpCallbackParams) (r RpCallbackRes, _ error) {
	return r, ht.ErrNotImplemented
}

// RpLogin implements rpLogin operation.
//
// RP Login.
//
// GET /rp/login
func (UnimplementedHandler) RpLogin(ctx context.Context) (r RpLoginRes, _ error) {
	return r, ht.ErrNotImplemented
}
